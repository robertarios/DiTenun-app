version: '3.8'  # Menggunakan Docker Compose versi 3.8

services:
  mysql-db:
    image: mysql:8  # Menggunakan image MySQL versi 8
    container_name: project_mysql  # Nama container untuk MySQL
    restart: unless-stopped  # Restart container kecuali dihentikan secara manual
    volumes:
      - mysql-data:/var/lib/mysql  # Volume untuk menyimpan data MySQL
    environment:
      MYSQL_ROOT_PASSWORD: 'root'  # Password root untuk MySQL
      MYSQL_DATABASE: 'GenerateMotif'  # Nama database yang akan dibuat
      MYSQL_TCP_PORT: '3309'  # Port TCP MySQL yang digunakan
    ports:
      - "3309:3309"  # Memetakan port 3309 dari host ke port 3309 dalam container
  
  django:
    build: 
      context: .  # Menggunakan konteks dari direktori saat ini
      dockerfile: Dockerfile  # Menggunakan Dockerfile untuk membangun image
    container_name: project_django  # Nama container untuk Django
    command: sh -c "sleep 10 && python manage.py makemigrations Website && python manage.py migrate && python manage.py collectstatic --noinput && python manage.py seed_accounts && python manage.py seed_characteristics && python manage.py seed_colors && python manage.py runserver 0.0.0.0:8000 --noreload"  # Perintah untuk menjalankan Django
    restart: unless-stopped  # Restart container kecuali dihentikan secara manual
    volumes:
      - .:/app  # Mount direktori saat ini ke dalam container di /app
    ports:
      - "8008:8000"  # Memetakan port 8008 dari host ke port 8000 dalam container
    env_file:
      - .env  # Menggunakan file lingkungan .env untuk variabel lingkungan
    depends_on:
      - mysql-db  # Layanan ini bergantung pada mysql-db

volumes:
  mysql-data:
    driver: local  # Menetapkan driver volume sebagai lokal
