# # docker paling update 
version: '3.8'
services:
  mysql-db:
    image: mysql
    container_name: project_mysql
    restart: always
    volumes:
      - data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    env_file:
      - .env
    ports:
      - "3308:3306"
  
  django:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: project_django
    command: sh -c "sleep 10 && python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    restart: always
    volumes:
      - .:/app
    ports:
      - "8002:8000"
    env_file:
      - .env
    depends_on:
      - mysql-db

volumes:
  data:



# # docker awal 
# version: '3.8'

# services:
#   django-web:
#     build: .
#     command: gunicorn Website.wsgi:application --bind 0.0.0.0:8000
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - mysql-db
#     environment:
#       MYSQL_HOST: mysql-db
#       MYSQL_USER: 'user'
#       MYSQL_PASSWORD: 'password'
#       MYSQL_DB: 'GenerateMotif'
    
#   mysql-db:
#     image: mysql
#     environment:
#       MYSQL_DATABASE: 'GenerateMotif'
#       MYSQL_USER: 'user'
#       MYSQL_PASSWORD: 'password'
#       MYSQL_ROOT_PASSWORD: 'root'
#     ports:
#       - "3306:3306"
#     volumes:
#       - mysql-data:/var/lib/mysql

# volumes:
#   mysql-data:

# # docker yang sudah bisa dibuild namun masih ada masalah unhealty
# version: '3.9'
# services:
#   mysql-db:
#     image: mysql:
#     container_name: project_mysql
#     restart: always
#     volumes:
#       - data:/var/lib/mysql
#     environment:
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#       MYSQL_DATABASE: ${MYSQL_DATABASE}
#       MYSQL_USER: ${MYSQL_USER}
#       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#     ports:
#       - "3308:3306"
#     healthcheck:
#       test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${MYSQL_ROOT_PASSWORD}"]
#       interval: 30s
#       timeout: 10s
#       retries: 5
  
#   django:
#     build: 
#       context: .
#       dockerfile: Dockerfile
#     container_name: project_django
#     command: sh -c "python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
#     restart: always
#     volumes:
#       - .:/app
#     ports:
#       - "8002:8000"
#     env_file:
#       - .env
#     depends_on:
#       mysql-db:
#         condition: service_healthy

# volumes:
#   data:
